PREFIX dsf: <https://openprovenance.org/ns/facet/dsf#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

# CompositeCondition Evaluation - OR operator
# Checks marked OR conditions for any satisfied subcondition

CONSTRUCT {
    ?eval rdf:type dsf:ConditionEvaluation ;
          dsf:evaluatesCondition ?orCondition ;
          dsf:evaluatedOn ?container ;
          dsf:evaluatedInScope ?scope ;
          dsf:evaluationResult "true"^^xsd:boolean .
}
WHERE {
    # Find marked OR conditions
    ?mark rdf:type dsf:ConditionMark ;
          dsf:markedCondition ?orCondition ;
          dsf:markedForContainer ?container ;
          dsf:markedInScope ?scope .
    
    ?orCondition dsf:logicalOperator dsf:OR ;
                dsf:hasCondition ?subCondition .

    # Find where at least one subcondition is satisfied
    ?subEval rdf:type dsf:ConditionEvaluation ;
            dsf:evaluatesCondition ?subCondition ;
            dsf:evaluatedOn ?container ;
            dsf:evaluatedInScope ?scope ;
            dsf:evaluationResult "true"^^xsd:boolean .

    # Generate stable evaluation URI
    BIND(IRI(CONCAT("urn:eval:composite-or:",
                    MD5(CONCAT(STR(?orCondition), ":", STR(?container), ":", STR(?scope)))))
         AS ?eval)

    # Only create if doesn't already exist
    FILTER NOT EXISTS {
        ?eval rdf:type dsf:ConditionEvaluation .
    }
}