PREFIX dsf: <https://openprovenance.org/ns/facet/dsf#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

# Mark conditions for evaluation from ConditionalImplications with fromLabel
# This creates marks for conditions that need to be evaluated because:
# 1. Container has the fromLabel
# 2. Container doesn't have the toLabel
# 3. So the condition determines whether toLabel should be added

CONSTRUCT {
    ?mark rdf:type dsf:ConditionMark ;
          dsf:markedCondition ?condition ;
          dsf:markedForContainer ?container ;
          dsf:markedInScope ?scope ;
          dsf:markedFromImplication ?impl .
}
WHERE {
    # Find ConditionalImplications with fromLabel
    ?framework dsf:declaresImplication ?impl .
    ?impl a dsf:ConditionalImplication ;
          dsf:fromLabel ?fromLabel ;
          dsf:toLabel ?toLabel ;
          dsf:hasCondition ?condition .
    
    # Find containers with fromLabel in specific scopes
    ?container dsf:hasLabelInScope ?labelScope .
    ?labelScope dsf:label ?fromLabel ;
                dsf:scope ?scope .
    
    # Check container doesn't already have toLabel in this scope
    FILTER NOT EXISTS {
        ?container dsf:hasLabelInScope ?toLabelScope .
        ?toLabelScope dsf:label ?toLabel ;
                      dsf:scope ?scope .
    }
    
    # Generate deterministic mark URI
    BIND(IRI(CONCAT("urn:mark:",
                    MD5(CONCAT(STR(?condition), ":", STR(?container), ":", STR(?scope)))))
         AS ?mark)
    
    # Only create if mark doesn't already exist
    FILTER NOT EXISTS {
        ?mark rdf:type dsf:ConditionMark .
    }
}