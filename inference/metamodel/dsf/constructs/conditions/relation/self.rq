PREFIX dsf: <https://openprovenance.org/ns/facet/dsf#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

# RelationLabelCondition Evaluation - Self Relations
# Evaluates marked RelationLabelConditions where onRelation is Self
# Uses marks to know which conditions need evaluation for which containers

CONSTRUCT {
    ?eval rdf:type dsf:ConditionEvaluation ;
          dsf:evaluatesCondition ?condition ;
          dsf:evaluatedOn ?container ;
          dsf:evaluatedInScope ?scope ;
          dsf:evaluationResult "true"^^xsd:boolean .
}
WHERE {
    # Find marked conditions
    ?mark rdf:type dsf:ConditionMark ;
          dsf:markedCondition ?condition ;
          dsf:markedForContainer ?container ;
          dsf:markedInScope ?scope .
    
    # Check if it's a RelationLabelCondition with Self relation
    ?condition rdf:type dsf:RelationLabelCondition ;
               dsf:onRelation dsf:Self ;
               dsf:requiresLabel ?requiredLabel .
    
    # Check if container has the required label in the scope
    ?container dsf:hasLabelInScope ?labelScope .
    ?labelScope dsf:label ?requiredLabel ;
                dsf:scope ?scope .
    
    # Create deterministic evaluation URI
    BIND(IRI(CONCAT("urn:eval:relation:",
                    MD5(CONCAT(STR(?condition), ":", STR(?container), ":", STR(?scope)))))
         AS ?eval)
    
    # Only create if not already exists
    FILTER NOT EXISTS {
        ?eval rdf:type dsf:ConditionEvaluation .
    }
}