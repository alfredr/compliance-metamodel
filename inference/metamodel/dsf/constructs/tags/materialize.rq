PREFIX : <https://openprovenance.org/ns/facet/dsf#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

# Tags materialize as assertions wherever container is visible
# Tags represent intrinsic properties that materialize as assertions

CONSTRUCT {
    ?tagAssertion rdf:type :ComplianceAssertion ;
                  :assertedOn ?container ;
                  :assertsLabel ?tag ;
                  :assertedInScope ?scope ;
                  :assertedByFramework ?framework ;
                  :isExternalFact "true"^^xsd:boolean ;
                  :isGroundAssertion "true"^^xsd:boolean .
}
WHERE {
    # Container is visible where any assertion exists for it
    ?someAssertion rdf:type :ComplianceAssertion ;
                   :assertedOn ?container ;
                   :assertedInScope ?scope .

    # Container has a tag
    ?container :hasTag ?tag .

    # Tag must have an associated framework (the one that introduced it)
    ?tag :introducedByFramework ?framework .

    # Generate deterministic URI
    BIND(IRI(CONCAT("urn:skolem:",
                    ENCODE_FOR_URI(STR(?container)), "_",
                    ENCODE_FOR_URI(STR(?tag)), "_",
                    ENCODE_FOR_URI(STR(?framework)), "_",
                    ENCODE_FOR_URI(STR(?scope)), "_assertion"))
         AS ?tagAssertion)

    # Only create if doesn't already exist
    FILTER NOT EXISTS {
        ?tagAssertion rdf:type :ComplianceAssertion .
    }
}
